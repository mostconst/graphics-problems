add_library(
utils

"camera.cpp"
"camera.h"
"ArrayBuffer.cpp"
"ArrayBuffer.h"
"VertexArray.cpp"
"MovableHandle.cpp"
"math_util.cpp"
"ShaderProgram.cpp"
"Shader.cpp"
"ShaderProgramGuard.cpp"
"Color.cpp"
"Vertex.h"
"Vertex.cpp"
"GeometryObject.cpp"
"UserContext.cpp"
"conversion.h"
"gldebug.cpp"
"IndexedVertices.h"
"IndexedVertices.cpp"
"IndexTriangle.h"
"IndexTriangle.cpp"
"VertexTriangle.h"
"VertexTriangle.cpp"
"comparison.h"
"tesselate.cpp"
"TriangleCalculator.cpp"
"MeshBuilding.h"
"MeshBuilding.cpp"
"Mesh.h"
"Mesh.cpp"
"Material.h"
"Light.h"
 "lighting_utils.h"
 "lighting_utils.cpp"
 "constants.h"
 "Texture.h"
 "Texture.cpp"
 "Framebuffer.h"
 "Framebuffer.cpp"
 "buffer_loading.h"
 "buffer_loading.cpp"
 "glfw_utils.h"
 "glfw_utils.cpp"
 "ScreenSize.h"
 "draw_helpers.h"
 "draw_helpers.cpp"
 )

if(GRAPHICS_PROBLEMS_BUILD_TESTS)
	add_executable(
	  camera_test
	  camera_test.cpp
	 "MeshBuilding.h" "MeshBuilding.cpp")
	target_link_libraries(
	  camera_test
	  utils
	  GTest::gtest_main
	)

	include(GoogleTest)
	gtest_discover_tests(camera_test)
endif()